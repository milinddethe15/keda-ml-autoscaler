version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  chat-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  forecaster:
    build:
      context: ./forecaster
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - REDIS_HOST=redis
      - PROMETHEUS_URL=http://prometheus:9090
      - FORECAST_HORIZON_MINUTES=10
      - HISTORY_HOURS=24
    depends_on:
      - redis
      - prometheus
    networks:
      - chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  keda-scaler:
    build:
      context: ./keda-scaler
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    environment:
      - FORECASTER_URL=http://forecaster:8001
      - METRIC_NAME=chat_messages_per_second
      - FORECAST_MINUTES=5
      - TARGET_VALUE=10
      - MIN_REPLICAS=2
      - MAX_REPLICAS=10
      - GRPC_PORT=6000
    depends_on:
      - forecaster
    networks:
      - chat-network

  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=7d'
    networks:
      - chat-network

  grafana:
    image: grafana/grafana:10.2.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/dashboard-files:/var/lib/grafana/dashboards
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - chat-network

networks:
  chat-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
