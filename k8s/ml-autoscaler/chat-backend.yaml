apiVersion: v1
kind: Service
metadata:
  name: chat-backend
  namespace: ml-autoscaler
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: chat-backend
  ports:
    - name: http
      port: 8000
      targetPort: 8000
  type: LoadBalancer
  sessionAffinity: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-backend
  namespace: ml-autoscaler
spec:
  replicas: 2
  selector:
    matchLabels:
      app: chat-backend
  template:
    metadata:
      labels:
        app: chat-backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: chat-backend
        image: chat-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_HOST
          value: "redis"
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
          requests:
            memory: "256Mi"
            cpu: "250m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
